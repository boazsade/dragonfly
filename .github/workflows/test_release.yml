name: Test Only please remove me

on:
  pull_request:
    branches: '*'
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

permissions:
  contents: write

jobs:

  build-qemu:
    runs-on: ubuntu-latest
    name: Build aarch64 on ubuntu20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Cache build deps
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          ${{github.workspace}}/build-opt/
          !${{github.workspace}}/build-opt/CMakeCache.txt
        key: ${{ runner.os }}-release-deps-${{ github.sha }}
        #restore-keys: |
        #  ${{ runner.os }}-release-deps-

    - uses: uraimo/run-on-arch-action@v2
      name: Run commands
      id: runcmd
      with:
        arch: aarch64
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        # Create an artifacts directory
        setup: |
          mkdir -p "${PWD}/artifacts"

        # Mount the artifacts directory as /artifacts in the container
        dockerRunArgs: |
          --volume "${{ github.workspace }}:/src"
        # The shell to run commands with in the container
        shell: /bin/bash
        install: |
          export DEBIAN_FRONTEND=noninteractive
          apt update && apt install -q -y autoconf-archive cmake curl git libssl-dev \
              libunwind-dev ninja-build libtool gcc-9 g++-9 libboost-fiber-dev \
              libxml2-dev zip libzstd-dev debhelper moreutils
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 40  \
                              --slave /usr/bin/g++ g++ /usr/bin/g++-9
        run: |
            # Work around https://github.com/actions/checkout/issues/766
            git config --global --add safe.directory /src
            cd /src
            git describe --always --tags ${{ github.sha }}

            if [ -d build-opt ]; then
              chown -R root build-opt
              ls -l ./build-opt
              for i in `ls -d ./build-opt/_deps/*-src`; do
                git config --global --add safe.directory $(realpath $i)
              done
            fi
            ./tools/release.sh
            ./tools/packaging/generate_debian_package.sh build-opt/dragonfly-aarch64
            mv dragonfly_*.deb build-opt/
    - name: Show the artifact
      # Items placed in /src/build-opt in the container will be in
      # ${PWD}/build-opt on the host.
      run: |
        echo finished
        ls -al build-opt/dragonfly*
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: dragonfly-aarch64
        path: |
          build-opt/dragonfly-*tar.gz
          build-opt/dragonfly_*.deb

